"use strict";(self.webpackChunkprojectrestaurant=self.webpackChunkprojectrestaurant||[]).push([[179],{726:(e,t,n)=>{n.d(t,{I:()=>D});const a=document.querySelector("body"),c=document.querySelector("#cs-navigation"),i=document.querySelector("#cs-navigation .cs-toggle"),s=n.p+"9c196d77a8abd49c6ce3.jpg",r=n.p+"24debbbab5b97fdf52db.jpg";function o(e,t){const n=document.createElement("section");return n.setAttribute(e,t),n}function d(e,t){const n=document.createElement("div");return n.setAttribute(e,t),n}function l(e,t,n){const a=document.createElement("picture");return a.setAttribute(e,t),Object.keys(n).forEach((e=>{if("img"===e){const t=document.createElement("img");y(t,n[e]),a.appendChild(t)}else{const t=document.createElement("source");y(t,n[e]),a.appendChild(t)}})),a}function p(e,t,n,a){const c=document.createElement("ul");c.setAttribute(e,t);for(let e in n)n.hasOwnProperty(e)&&c.appendChild(a(n[e]));return c}function h(e,t,n,a){const c=document.createElement("li");c.setAttribute(e,t);const i=a(n);return c.appendChild(i),c}function m(e,t,n){const a=document.createElement("span");return a.setAttribute(e,t),a.innerText=n,a}function u(e,t,n){const a=document.createElement("span");return a.setAttribute(e,t),a.innerText=n,a}function g(e,t,n){const a=document.createElement("h2");return a.setAttribute(e,t),a.textContent=n,a}function f(e,t,n){const a=document.createElement("p");return a.setAttribute(e,t),a.textContent=n,a}function y(e,t){Object.keys(t).forEach((n=>{e.setAttribute(n,t[n])}))}function b(e){return e.textContent="",!0}function w(e,t,n,a,c){const i=document.createElement("a");return i.setAttribute(e,t),i.innerText=c,i.setAttribute(n,a),i.setAttribute("target","_blank"),i}const C={content:{topper:"Do you like food?",title:"Accessible Food That Anyone Can Eat",paragraph:'Immerse yourself in the tantalizing world of gourmet dining at\n        "Savor\'s Catch", a vibrant and electrifying restaurant brand\n        crafted specifically for those who relish the thrill of culinary\n        excellence. For avid food enthusiasts who feel their taste buds\n        awaken at the first hint of exquisite flavors, "Savor\'s Catch"\n        embodies the essence of that exhilarating moment when a\n        perfectly prepared dish and a discerning diner engage in a\n        delightful interplay of taste and craftsmanship.'},imageLeft:{mobileImage:{media:"(max-width: 600px)",srcset:s},tabletImage:{media:"(max-width: 601px)",srcset:s},img:{loading:"lazy",decoding:"async",src:s,alt:"people",width:"608",height:"406"}},imageRight:{mobileImage:{media:"(max-width: 600px)",srcset:r},tabletImage:{media:"(max-width: 601px)",srcset:r},img:{loading:"lazy",decoding:"async",src:r,alt:"people",width:"608",height:"662"}},stats:{firstStat:{num:"99%",text:"Positive customer reviews"},secondStat:{num:"10",text:"Dish 'Try Again' Special"},thirdStat:{num:"24/7",text:"Online reservation and inquiry service"}}},x={id:"id",class:"class"};function v(e){b(e);const t=e,n=o(x.id,"home-content-container"),a=d(x.class,"home-content");t.appendChild(n),n.appendChild(a);const c=function(){const e=d(x.class,"home-content-left"),t=l(x.class,"cs-picture cs-picture-left",C.imageLeft),n=p(x.class,"cs-stats",C.stats,(e=>h(x.class,"cs-stat",e,k)));return e.appendChild(t),e.appendChild(n),e}(),i=function(){const e=d(x.class,"home-content-right"),t=u(x.class,"cs-topper",C.content.topper),n=g(x.class,"cs-title",C.content.title),a=f(x.class,"cs-text",C.content.paragraph),c=l(x.class,"cs-picture cs-picture-right",C.imageRight);return e.appendChild(t),e.appendChild(n),e.appendChild(a),e.appendChild(c),e}();a.appendChild(c),a.appendChild(i)}function k(e){const t=document.createDocumentFragment(),n=m(x.class,"cs-number",e.num),a=m(x.class,"cs-desc",e.text);return t.appendChild(n),t.appendChild(a),t}const I=n.p+"de601f995eef44a727d1.jpg",S=n.p+"dde070f480ef94ffa9c8.jpg",A=n.p+"e437c9439b81c586b149.jpg",E=n.p+"9b6cfb8a45e83cf792c7.jpg",L=n.p+"956616cb8b4da51529cb.jpg",P=n.p+"ec65f361748e78263f7c.jpg";let z=[{contents:{title:"Our Contacts",topper:"We got food!",paragraph:"Some clever text about reserving table via phone or email"},cardGroup:{phone:{info:{header:"Phone",phoneNrOne:"+1 (555) 456 7899",phoneNrTwo:"+1 (555) 456 7889",href:"tel:555-456-7899"},picture:{img:{src:"https://csimg.nyc3.digitaloceanspaces.com/Contact-Page/phone-grey.svg",alt:"icon",width:"35",height:"40",loading:"lazy",decoding:"async"}}},email:{info:{header:"Email",email:"info@email.com",href:"mailto:Info@email.com"},picture:{img:{src:"https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/mech-email.svg",alt:"icon",width:"40",height:"35",loading:"lazy",decoding:"async"}}},address:{info:{header:"Address",address:"123 Fake St, STE 100 Somewhere, FL 9875",href:"https://www.google.com/maps"},picture:{img:{src:"https://csimg.nyc3.digitaloceanspaces.com/Contact-Page/pin-grey.svg",alt:"icon",width:"40",height:"40",loading:"lazy",decoding:"async"}}},hours:{info:{header:"Open Hours",days:"Monday To Saturday",hours:"9:00 - 22:30"},picture:{img:{src:"https://csimg.nyc3.digitaloceanspaces.com/Contact-Page/clock-grey.svg",alt:"icon",width:"40",height:"40",loading:"lazy",decoding:"async"}}}}}];function j(e){b(e);const t=o("id","contact-strip-324");e.appendChild(t);const n=function(){const e=d("class","cs-container"),t=function(){const e=d("class","cs-content"),t=g("class","cs-title",z[0].contents.title),n=u("class","cs-topper",z[0].contents.topper),a=f("class","cs-text",z[0].contents.paragraph);return e.appendChild(n),e.appendChild(t),e.appendChild(a),e}();return e.appendChild(t),e}();t.appendChild(n);const a=z[0].cardGroup,c=p("class","cs-stat-group",Object.values(a),T);n.appendChild(c)}function T(e){return h("class","cs-item",e,q)}function q(e){const t=document.createDocumentFragment(),n=l("class","cs-picture",e.picture),a=d("class","cs-flex-group");return a.appendChild(m("class","cs-header",e.info.header)),function(e,t){if(t.phoneNrOne){const n=w("href",t.href,"class","cs-link",t.phoneNrOne),a=w("href",t.href,"class","cs-link",t.phoneNrTwo);e.appendChild(n),e.appendChild(a)}else if(t.email){const n=w("href",`mailto:${t.email}`,"class","cs-link",t.email);e.appendChild(n)}else if(t.address){const n=w("href",t.href,"class","cs-link",t.address);e.appendChild(n)}else if(t.days){const n=m("class","cs-hours",t.days),a=m("class","cs-hours",t.hours);e.appendChild(n),e.appendChild(a)}}(a,e.info),t.appendChild(n),t.appendChild(a),t}const O={content:{title:"Our Specials",paragraph:"Indulge in our Special Menu, where each dish is a masterpiece of\n            flavor and creativity. From the heartiness of a Bison Burger to\n            the exotic flair of Curried Chicken Salad with Mango, experience\n            a culinary journey that delights and surprises with every bite."},cardGroup:{listItemOne:{info:{name:"Lasagna",price:"56€",itemParagraph:"A classic favorite, our lasagna layers tender pasta with\n                    rich meat sauce and creamy béchamel, topped with golden,\n                    bubbling cheese for a comforting and indulgent meal."},picture:{mobileImage:{media:"(max-width: 600px)",srcset:A},tabletImage:{media:"(max-width: 601px)",srcset:A},img:{loading:"lazy",decoding:"async",src:A,alt:"people",width:"160",height:"160"}}},listItemTwo:{info:{name:"Bison Burger",price:"56€",itemParagraph:"This hearty burger features a juicy bison patty topped\n                    with fresh vegetables and melted cheese, served in a\n                    rustic bun for a robust and satisfying experience."},picture:{mobileImage:{media:"(max-width: 600px)",srcset:I},tabletImage:{media:"(max-width: 601px)",srcset:I},img:{loading:"lazy",decoding:"async",src:I,alt:"people",width:"160",height:"160"}}},listItemThree:{info:{name:"Curried Chicken Salad",price:"56€",itemParagraph:"A refreshing mix of tender curried chicken and sweet\n                    mango slices, tossed with vibrant greens for a light yet\n                    flavorful salad."},picture:{mobileImage:{media:"(max-width: 600px)",srcset:S},tabletImage:{media:"(max-width: 601px)",srcset:S},img:{loading:"lazy",decoding:"async",src:S,alt:"people",width:"160",height:"160"}}},listItemFour:{info:{name:"Meat Lovers' Pizza",price:"56€",itemParagraph:"Loaded with an assortment of meats like pepperoni,\n                    sausage, and bacon, this pizza offers a carnivore's\n                    delight with every crispy, cheesy bite."},picture:{mobileImage:{media:"(max-width: 600px)",srcset:E},tabletImage:{media:"(max-width: 601px)",srcset:E},img:{loading:"lazy",decoding:"async",src:E,alt:"people",width:"160",height:"160"}}},listItemFive:{info:{name:"Purple Corn Tostada",price:"56€",itemParagraph:"A feast for the eyes and the palate, this tostada uses a\n                    unique purple corn shell, piled high with seasoned meats\n                    and fresh toppings for a crunchy, savory treat."},picture:{mobileImage:{media:"(max-width: 600px)",srcset:P},tabletImage:{media:"(max-width: 601px)",srcset:P},img:{loading:"lazy",decoding:"async",src:P,alt:"people",width:"160",height:"160"}}},listItemSix:{info:{name:"Prickly Pear Pork Sauce",price:"56€",itemParagraph:"An innovative fusion, this sauce blends the sweetness of\n                    prickly pear with rich pork, creating a perfect\n                    complement to enhance any gourmet dish."},picture:{mobileImage:{media:"(max-width: 600px)",srcset:L},tabletImage:{media:"(max-width: 601px)",srcset:L},img:{loading:"lazy",decoding:"async",src:L,alt:"people",width:"160",height:"160"}}}}};function F(e){const t=document.createDocumentFragment(),n=l("class","cs-picture",e.picture),a=function(e){const t=d("class","cs-info"),n=function(e){const t=document.createElement("h3"),n=m("class","cs-name",e.info.name),a=m("class","cs-price",e.info.price);return t.setAttribute("class","cs-h3"),t.appendChild(n),t.appendChild(a),t}(e),a=f("class","cs-item-p",e.info.itemParagraph);return t.appendChild(n),t.appendChild(a),t}(e);return n.setAttribute("area-hidden","true"),t.appendChild(n),t.appendChild(a),t}!function(){function e(){document.body.classList.add("dark-mode"),localStorage.setItem("theme","dark")}function t(){document.body.classList.remove("dark-mode"),localStorage.setItem("theme","light")}!function(){let n="light";localStorage.getItem("theme")?n=localStorage.getItem("theme"):window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches&&(n="dark"),"dark"===n?e():t()}(),document.getElementById("dark-mode-toggle").addEventListener("click",(()=>{"light"===localStorage.getItem("theme")?e():t()}))}(),function(){i.addEventListener("click",(function(){i.classList.toggle("cs-active"),c.classList.toggle("cs-active"),a.classList.toggle("cs-open"),function(){const e=document.querySelector("#cs-expanded");"false"===e.getAttribute("aria-expanded")?e.setAttribute("aria-expanded","true"):e.setAttribute("aria-expanded","false")}()}));const e=Array.from(document.querySelectorAll("#cs-navigation .cs-dropdown"));for(const t of e){const e=()=>{t.classList.toggle("cs-active")};t.addEventListener("click",e)}}();let B=document.querySelector("#main-content");function D(e){const t=document.querySelector("body"),n=document.querySelector("#cs-navigation"),a=document.querySelector("#cs-navigation .cs-toggle");["home","menu","contacts"].forEach((c=>{const i=document.getElementById(c);i&&(c===e?(i.classList.add("cs-active"),a.classList.remove("cs-active"),n.classList.remove("cs-active"),t.classList.remove("cs-open")):i.classList.remove("cs-active"))}))}v(B),["home","menu","contacts"].forEach((e=>{const t=document.getElementById(e);t.addEventListener("click",(()=>{"home"==t.id?v(B):"menu"==t.id?function(e){b(e);const t=e,n=o("id","menu-1005");t.appendChild(n);const a=function(){const e=d("class","cs-container"),t=function(){const e=d("class","cs-content"),t=g("class","cs-title",O.content.title),n=f("class","cs-text",O.content.paragraph);return e.appendChild(t),e.appendChild(n),e}(),n=p("class","cs-card-group",O.cardGroup,(e=>h("class","cs-item",e,F))),a=function(){const e=document.createElement("a"),t=document.body.querySelector("#main-content");return e.innerText="Reserve Your Table",e.setAttribute("href","#"),e.setAttribute("class","cs-button-solid"),e.addEventListener("click",(e=>{e.preventDefault(),j(t),D("contacts")})),e}();return e.appendChild(t),e.appendChild(n),e.appendChild(a),e}();n.appendChild(a)}(B):j(B),D(e)}))}))}},e=>{e(e.s=726)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,